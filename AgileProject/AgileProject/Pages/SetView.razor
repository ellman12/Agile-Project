@page "/set-view/{SetID}"
@using AgileProject.Backend

<link href="css/SetViewer.css" rel="stylesheet"/>

<AuthChecker/>

<div id="cardList">
	@for (int i = 0; i < flashcards.Count; i++)
	{
		int ii = i;
		<div class="card">
			<input @onfocusout="@(() => Connection.EditCard(parsedID, flashcards[ii].CardId, flashcards[ii].Question, flashcards[ii].Answer))" type="text" class="question" @bind="@flashcards[ii].Question"/>
			<input @onfocusout="@(() => Connection.EditCard(parsedID, flashcards[ii].CardId, flashcards[ii].Question, flashcards[ii].Answer))" type="text" class="answer" @bind="@flashcards[ii].Answer"/>
		</div>
	}
</div>

<div id="buttons">
	<IconButton OnClick="@CreateFlashcard" Icon="add"/>
	<IconButton OnClick="@BeginStudying" Icon="quiz"/>
</div>

@if (studying)
{
	<div id="studyingView" oncontextmenu="event.preventDefault()">
		<IconButton OnClick="@(() => { studying = false; CardIndex = 0; })" Icon="close"/>
		<div id="flashcard" @onclick="@CardClick" @oncontextmenu="@CardClick">
			<span id="topText">@(answerVisible ? "Answer" : "Question")</span>
			<span>@(answerVisible ? flashcards[CardIndex].Answer : flashcards[CardIndex].Question)</span>
		</div>
	</div>
}

@code {
	
	[Parameter] public string SetID { get; set; }

	private Guid parsedID;

	private List<Card> flashcards = new();

	private bool studying, answerVisible;
	private int cardIndex;
	private int CardIndex
	{
		get => cardIndex;
		set
		{
			if (value < 0 || value > flashcards.Count - 1) return;
			cardIndex = value;
			answerVisible = false;
		}
	}

	protected override void OnInitialized()
	{
		parsedID = Guid.Parse(SetID);
		flashcards = Connection.GetCardsFromSet(parsedID);
	}

	private void CreateFlashcard()
	{
		flashcards.Add(new Card("Question", "Answer"));
		Connection.CreateCard(parsedID, "Question", "Answer");
	}

	private void BeginStudying()
	{
		studying = true;
	}

	private void CardClick(MouseEventArgs mArgs)
	{
		long btn = mArgs.Button;
		if (!answerVisible && btn == 0)
			answerVisible = true;
		else if (answerVisible && btn == 0)
			CardIndex++;
		else if (answerVisible && btn == 2)
			answerVisible = false;
		else if (!answerVisible && btn == 2)
			CardIndex--;
	}
}